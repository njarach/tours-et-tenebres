<!DOCTYPE html>
<html lang="fr" data-bs-theme="dark">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{% block title %}Welcome!{% endblock %}</title>
    <link rel="icon"
          href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">
    {% block stylesheets %}
        <style>
            .card h3,.card h2,.card h4 {
                color: #01eefc;
                font-weight: bold;
                text-transform: uppercase;
            }

            #content-card a, li a, .card-body a, .card-header a, .card-header h5 button {
                text-decoration: none;
                color: #bedcde;
                font-weight: bolder;

            }
            #content-card a:hover, li a:hover, .card-body a:hover, .card-header a:hover, .card-header h5 button:hover  {
                text-decoration: none;
                color: #01eefc;
                font-weight: bolder;
            }

            #content-card {
                background-color: #2b3035;
            }

            div#content-card h1 {
                text-transform: uppercase;
                color: #01eefc;
            }

            .btn-neon-vibrant {
                background-color: #01eefc; /* Neon vibrant color */
                color: #fff; /* Text color */
                border: none; /* Remove border */
                padding: 10px 20px; /* Adjust padding as needed */
                border-radius: 5px; /* Rounded corners */
                text-decoration: none; /* Remove underline */
                box-shadow: 0 0 2px #01eefc, 0 0 5px #01eefc, 0 0 10px #01eefc; /* Neon effect */
                transition: all 0.5s ease; /* Smooth transition */
            }

            .btn-neon-vibrant:hover {
                background-color: #01eefc; /* Neon vibrant color */
                color: #fff; /* Text color */
                text-decoration: none; /* Remove underline */
                box-shadow: 0 0 5px #01eefc, 0 0 15px #01eefc, 0 0 30px #01eefc; /* Neon effect */
                transition: all 0.5s ease; /* Smooth transition */
            }


            .sidebar-link {
                text-decoration: none;
                color: #bedcde;
                font-weight: bolder;
            }

            .sidebar-link:hover {
                text-decoration: none;
                color: #01eefc;
                font-weight: bolder;
            }
        </style>
    {% endblock %}

    {% block javascripts %}
    {% endblock %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>

<body>
{# Navbar #}
<header class="navbar sticky-top bg-dark flex-md-nowrap p-0 shadow" data-bs-theme="dark">
    <a class="navbar-brand col-md-3 col-lg-2 me-0 px-3 fs-6 text-white" href="#">Abysse & Bianca</a>

    <ul class="navbar-nav flex-row d-md-none">
        <li class="nav-item text-nowrap">
            <button class="nav-link px-3" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
                <i style="color: white !important;" class="bi bi-list"></i>
            </button>
        </li>
    </ul>

    <div id="navbarSearch" class="navbar-search w-100 bg-white">
        <input class="form-control w-100 rounded-0 border-0" type="text" placeholder="Search" aria-label="Search" name="searchbar" hx-get="{{ path('search_files') }}" hx-trigger="keyup delay:0.5s" hx-target="#main-content">
    </div>

</header>
{# Sidebar & Content #}
<div class="container-fluid">
    <div class="row">
        {#        Sidebar #}
        <div class="sidebar border border-right col-md-3 col-lg-2 p-0 bg-body-tertiary" id="sidebar">
            <div class="offcanvas-md offcanvas-end bg-body-tertiary" tabindex="-1" id="sidebarMenu" aria-labelledby="sidebarMenuLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="sidebarMenuLabel">Abysse & Bianca</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#sidebarMenu" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body d-md-flex flex-column p-0 pt-lg-3 overflow-y-auto">
                    {% block sidebar %}{% endblock %}
                </div>
            </div>
        </div>
        {# Main content #}
        <main class="col-md-9 ms-sm-auto col-lg-10">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center border-bottom" id="main-content">
                {% block body %}{% endblock %}
            </div>
        </main>
    </div>
</div>
<script>

        document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.sidebar-link').forEach(function(link) {
            link.addEventListener('click', function() {
                // Close the offcanvas element
                let offcanvasElement = document.getElementById('sidebarMenu');
                let offcanvasInstance = bootstrap.Offcanvas.getInstance(offcanvasElement);
                if (offcanvasInstance) {
                    offcanvasInstance.hide();
                } else {
                    let offcanvasInstance = new bootstrap.Offcanvas(offcanvasElement);
                    offcanvasInstance.hide();
                }
            });
        });
    });

    document.addEventListener('htmx:afterLoad', function () {
        // Restore the state of the collapsibles
        const collapsibles = document.querySelectorAll('.collapse');
        collapsibles.forEach(function (collapse) {
            const collapseId = collapse.id;
            const state = localStorage.getItem(collapseId);
            if (state === 'true') {
                new bootstrap.Collapse(collapse, {toggle: true});
            }
        });

        // Add event listeners to store the state
        collapsibles.forEach(function (collapse) {
            collapse.addEventListener('shown.bs.collapse', function () {
                localStorage.setItem(collapse.id, 'true');
            });
            collapse.addEventListener('hidden.bs.collapse', function () {
                localStorage.setItem(collapse.id, 'false');
            });
        });
    });
</script>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://unpkg.com/htmx.org@1.9.12"></script>
</html>
